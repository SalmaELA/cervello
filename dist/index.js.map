{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 34b388294df816f1337c","webpack:///./src/data/index.ts","webpack:///./src/math/index.ts","webpack:///./src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Propa1\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Propa1\"] = factory();\n\telse\n\t\troot[\"Propa1\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 34b388294df816f1337c","import { MathHelpers } from './../math/index'\n\nexport namespace Data {\n\n    export class Normalize {\n\n        /**\n         * Normalized input.\n         * \n         * @var input MathHelpers.Matrix\n         */\n        public input: MathHelpers.Matrix\n\n        /**\n         * Normalized output.\n         * \n         * @var output MathHelpers.Matrix\n         */\n        public output: MathHelpers.Matrix\n\n        /**\n         * Create new Normalize instance.\n         * \n         * @param input \n         * @param output \n         */\n        public constructor(input: MathHelpers.Matrix, output: MathHelpers.Matrix) {\n            this.input = input\n            this.output = output\n        }\n    }\n\n    export class Sum {\n\n        /**\n         * Sum.\n         * \n         * @var sum MathHelpers.Matrix\n         */\n        public sum: MathHelpers.Matrix\n\n        /**\n         * Result after neural activation.\n         * \n         * @var result MathHelpers.Matrix\n         */\n        public result: MathHelpers.Matrix\n\n        /**\n         * Create a new Sum instance.\n         * \n         * @param sum \n         * @param result \n         */\n        public constructor(sum: MathHelpers.Matrix, result: MathHelpers.Matrix) {\n            this.sum = sum\n            this.result = result\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/index.ts","export namespace MathHelpers {\n\n    export interface differentiable {\n        /**\n         * @param x number\n         * \n         * @return number\n         */\n        value(x: number): number\n\n        /**\n         * @param x number\n         * \n         * @return number\n         */\n        prime(x: number): number\n    }\n\n    export namespace Activation {\n\n        export class Sigmoid implements differentiable {\n\n            /**\n             * Deduce the y from x.\n             * \n             * @param x number\n             * \n             * @return number\n             */\n            public value(x: number): number {\n                return 1 / (1 + Math.exp(-x))\n            }\n\n            /**\n             * Deduce y value from x sigmoid prime.\n             * \n             * @param x number\n             * \n             * @return number\n             */\n            public prime(x: number): number {\n                return Math.exp(-x) / Math.pow(1 + Math.exp(-x), 2);\n            }\n        }\n\n        export class Htan implements differentiable {\n            \n            /**\n             * Hyperbolic tangent.\n             * \n             * @param x number\n             */\n            public value(x: number): number {\n                if (x === Infinity) {\n                    return 1\n                }\n\n                if (x === -Infinity) {\n                    return -1\n                }\n\n                let y: number;\n                y = Math.exp(x * 2)\n                return ((y - 1) / (y + 1))\n            }\n\n            /**\n             * Hyperbolic tangent prime.\n             * \n             * @param x number\n             * \n             * @return number\n             */\n            public prime(x: number): number {\n                return 1 - Math.pow((Math.exp(2 * x) - 1) / (Math.exp(2 * x) + 1), 2);\n            }\n        }\n\n        export class Relu {\n\n            /**\n             * Rectified linear unit.\n             * \n             * @param x number \n             * \n             * @return number\n             */\n            public static relu(x: number): number {\n                if (x > 0) {\n                    return x\n                }\n                return (x / 320)\n            }\n\n            /**\n             * Rectified linear unit derivative.\n             * \n             * @param x number\n             * \n             * @return number\n             */\n            public static prime(x: number): number {\n                if (x > 0) {\n                    return 1\n                }\n\n                return 0;\n            }\n        }\n    }\n\n    export class Gaussian {\n\n        /**\n         * Generate a random Gaussian distribution.\n         * \n         * @return number\n         */\n        public static random(): number {\n            return Math.sqrt(-2 * Math.log(Math.random())) * Math.cos(2 * Math.PI * Math.random());\n        }\n    }\n\n    export class Matrix {\n\n        /**\n         * Matrix row.\n         * \n         * @var rows number\n         */\n        public rows: number;\n\n        /**\n         * Matrix columns.\n         * \n         * @var cols\n         */\n        public cols: number;\n\n        /**\n         * Tha Matrix array.\n         * \n         * @var m any[]\n         */\n        public m: any = []\n\n        /**\n         * Create a new Matrix instance. \n         * \n         * @param args \n         */\n        public constructor(args: any) {\n            if (Array.isArray(args)) {\n                this.rows = args.length\n                this.cols = args[0].length\n                for (var i = 0; i < this.rows; i++) {\n                    this.m[i] = [];\n\n                    for (var j = 0; j < this.cols; j++) {\n                        this.m[i][j] = args[i][j];\n                    }\n                }\n            } else {\n                this.rows = args.rows;\n                this.cols = args.cols;\n                for (let i = 0; i < this.rows; i++) {\n                    this.m[i] = []\n                    for (let j = 0; j < this.cols; j++) {\n                        if (args.values) {\n                            let random = args.values()\n                            this.m[i][j] = random\n                        } else {\n                            this.m[i][j] = 0\n                        }\n                    }\n                }\n            }\n        }\n\n        /**\n         * Getter.\n         * \n         * @return MathHelpers.Matrix\n         */\n        public get(): Matrix {\n            return this\n        }\n\n        /**\n         * Transform matrix.\n         * \n         * @param call function\n         * \n         * @return MathHelpers.Matrix\n         */\n        public transform(call: (arg: number) => void): Matrix {\n            for (let i = 0; i < this.rows; i++) {\n                for (let j = 0; j < this.cols; j++) {\n                    this.m[i][j] = call(this.m[i][j]);\n                }\n            }\n\n            return this;\n        }\n\n        /**\n         * Sum of two matrices.\n         * \n         * @param m1 MathHelpers.Matrix\n         * @param m2 MathHelpers.Matrix\n         * \n         * @return MathHelpers.Matrix\n         */\n        public static add(m1: Matrix, m2: Matrix): Matrix {\n            // Number of rows and columns in first must equal number of rows and columns in second.\n            if (m1.rows !== m2.rows || m1.cols !== m2.cols) {\n                throw new Error('You can only add matrices with equal dimensions');\n            }\n\n            var result = new Matrix({ rows: m1.rows, cols: m1.cols });\n\n            for (var i = 0; i < m1.rows; i++) {\n                for (var j = 0; j < m1.cols; j++) {\n                    result.m[i][j] = m1.m[i][j] + m2.m[i][j];\n                }\n            }\n\n            return result;\n        }\n\n        /**\n         * Substraction of two matrices.\n         * \n         * @param m1 MathHelpers.Matrix\n         * @param m2MathHelpers.Matrix\n         * \n         * @return MathHelpers.Matrix \n         */\n        public static subtract(m1: Matrix, m2: Matrix): Matrix {\n            if (m1.rows !== m2.rows || m1.cols !== m2.cols) {\n                throw new Error('You can only subtract matrices with equal dimensions');\n            }\n\n            var result = new Matrix({ rows: m1.rows, cols: m1.cols });\n\n            for (var i = 0; i < m1.rows; i++) {\n                for (var j = 0; j < m1.cols; j++) {\n                    result.m[i][j] = m1.m[i][j] - m2.m[i][j];\n                }\n            }\n\n            return result;\n        }\n\n        /**\n         * Multiplying elements of two matrices. \n         * \n         * @param m1 MathHelpers.Matrix\n         * @param m2 MathHelpers.Matrix\n         * \n         * @return MathHelpers.Matrix\n         */\n        public static multiplyElements(m1: Matrix, m2: Matrix): Matrix {\n            var result = new Matrix({ rows: m1.rows, cols: m1.cols })\n\n            for (var i = 0; i < m1.rows; i++) {\n                result.m[i] = [];\n\n                for (var j = 0; j < m1.m[i].length; j++) {\n                    result.m[i][j] = m1.m[i][j] * m2.m[i][j];\n                }\n            }\n\n            return result;\n        }\n\n        /**\n         * Multiply by scalar.\n         * \n         * @param m1 MathHelpers.Matrix\n         * @param num number\n         * \n         * @return MathHelpers.Matrix\n         */\n        public static multiplyScalar(m1: Matrix, num: number): Matrix {\n            var result = new Matrix({ rows: m1.rows, cols: m1.cols });\n\n            for (var i = 0; i < m1.rows; i++) {\n                for (var j = 0; j < m1.cols; j++) {\n                    result.m[i][j] = m1.m[i][j] * num;\n                }\n            }\n\n            return result;\n        }\n\n        /**\n         * Transpose matrix.\n         * \n         * @return MathHelpers.Matrix\n         */\n        public transpose(): Matrix {\n            var result = new Matrix({ rows: this.cols, cols: this.rows });\n\n            for (var i = 0; i < this.cols; i++) {\n                result.m[i] = [];\n\n                for (var j = 0; j < this.rows; j++) {\n                    result.m[i][j] = this.m[j][i];\n                }\n            }\n\n            return result;\n        }\n\n        /**\n         * Multiply tow matrices.\n         * \n         * @param m1 MathHelpers.Matrix\n         * @param m2 MathHelpers.Matrix\n         * \n         * @return MathHelpers.Matrix\n         */\n        public static multiply(m1: Matrix, m2: Matrix): Matrix {\n            if (m1.cols !== m2.rows) {\n                throw new Error('You can only multiply matrices with equal dimensions');\n            }\n            let result = new Matrix({ rows: m1.rows, cols: m2.cols })\n\n            for (let i = 0; i < m1.rows; i++) {\n                result.m[i] = []\n                for (let j = 0; j < m2.cols; j++) {\n                    let sum = 0;\n                    for (let k = 0; k < m1.cols; k++) {\n                        sum += m2.m[k][j] * m1.m[i][k];\n                    }\n                    result.m[i][j] = sum;\n                }\n            }\n\n            return result\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/math/index.ts","import { MathHelpers } from \"./math/index\"\nimport { Data } from \"./data/index\"\n\nexport namespace Cervello {\n\n    export class LinearRegression {\n        /**\n         * @var a number\n         */\n        public a: number;\n\n        /**\n         * @var b number\n         */\n        public b: number;\n\n        /**\n         * @var data Array<number>\n         */\n        protected data: Array<number>;\n\n        /**\n         * @var iteration number\n         */\n        protected iteration: number = 1000;\n\n        /**\n         * @var LearningRate: number\n         */\n        protected learningRate: number = 0.001;\n\n        /**\n         * Create new LinearRegression instance.\n         */\n        public constructor(options: any) {\n            if (options) {\n                this.iteration = options.iteration ? options.iteration : this.iteration\n                this.learningRate = options.learningRate ? options.learningRate : this.learningRate\n            }\n\n            this.a = 0\n            this.b = 0\n        }\n\n        /**\n         * Train the linear Model.\n         * \n         * @param data any\n         * \n         * @return Promise\n         */\n        public train(data: any): Promise<any> {\n            let error: number;\n            return new Promise<any>((res, rej) => {\n                for (let i = 0; i < this.iteration; i++) {\n                    this.gradientDec(data)\n                }\n\n                res([this.a, this.b])\n            })\n        }\n\n        /**\n         * calculate gradient descent.\n         * \n         * @param data any\n         */\n        private gradientDec(data: any): void {\n\n            let a_gr: number = 0;\n            let b_gr: number = 0;\n            let x: number = 0;\n            let y: number = 0;\n            let Total: number = data.inputs.length\n            for (let i = 0; i < data.inputs.length; i++) {\n                x = data.inputs[i]\n                y = data.outputs[i]\n                a_gr += -1 * ((2 / data.inputs.length) * x * (y - ((this.a * x) + this.b)))\n                b_gr += -1 * ((2 / data.inputs.length) * (y - ((this.a * x) + this.b)))\n            }\n\n            this.a = this.a - (a_gr * this.learningRate)\n            this.b = this.b - (b_gr * this.learningRate)\n        }\n\n        /**\n         * Predict output\n         * \n         * @param input number\n         */\n        public predict(input: number) {\n            // y = ax + b\n            return (input * this.a) + this.b\n        }\n\n        /**\n         * Import Model.\n         * \n         * @param data \n         */\n        public import(data: Array<number>): void {\n            this.a = data[0]\n            this.b = data[1]\n        }\n\n        /**\n         * export model\n         * \n         * @return Array<number>\n         */\n        public export(): Array<number> {\n            return [this.a, this.b]\n        }\n    }\n\n    export class NeuralNetwork {\n\n        /**\n         * Wedges.\n         * \n         * @var w MathHelpers.Matrix[]\n         */\n        protected w: MathHelpers.Matrix[];\n\n        /**\n         * Units of each layer\n         * \n         * @var middleLayerUnits number\n         */\n        protected middleLayerUnits: number = 3;\n\n        /**\n         * hidden layers.\n         * \n         * @var mddleLayer number\n         */\n        protected middleLayer: number = 1;\n\n        /**\n         * Iteration\n         * \n         * @var iteration number\n         */\n        protected iteration: number = 3\n\n        /**\n         * Learning rate.\n         * \n         * @var learningRate number\n         */\n        protected learningRate: number = 0.01\n\n        /**\n         * Activation method.\n         * \n         * @var activation any\n         */\n        protected activation: MathHelpers.differentiable = new MathHelpers.Activation.Sigmoid()\n\n        /**\n         * Create new instance.\n         * \n         * @param options Array\n         */\n        public constructor(options?: any) {\n            if (options) {\n                this.iteration = options.iteration ? options.iteration : this.iteration\n                this.learningRate = options.learningRate ? options.learningRate : this.learningRate\n                this.middleLayer = options.hiddenLayer ? options.hiddenLayer : this.middleLayer\n                this.middleLayerUnits = options.units ? options.units : this.middleLayerUnits\n                if (options.activator === \"htan\") {\n                    this.activation = new MathHelpers.Activation.Htan()\n                }\n            }\n        }\n\n        /**\n         * Training model.\n         * \n         * @param input\n         * \n         * @return NeuralNetwork\n         */\n        public train(input: Array<any>): NeuralNetwork {\n            let data: Data.Normalize\n            let result: any = null\n            let back: any = null\n            data = this.format(input)\n            if (!this.w) {\n                this.boot(data)\n            }\n            for (let i = 0; i < this.iteration; i++) {\n                result = this.forward(data.input)\n\n                back = this.back(data, result)\n            }\n\n            return this\n        }\n\n        /**\n         * Setup wedges.\n         * \n         * @param data Data.Normalize\n         */\n        protected boot(data: Data.Normalize): void {\n\n            this.w = []\n\n            this.w.push(new MathHelpers.Matrix(\n                {\n                    rows: this.middleLayerUnits,\n                    cols: data.input.m[0].length,\n                    values: MathHelpers.Gaussian.random\n                }));\n\n            for (let i = 1; i < this.middleLayer; i++) {\n                this.w.push(new MathHelpers.Matrix(\n                    {\n                        rows: this.middleLayerUnits,\n                        cols: this.middleLayerUnits,\n                        values: MathHelpers.Gaussian.random\n                    }\n                ))\n            }\n\n            this.w.push(new MathHelpers.Matrix(\n                {\n                    rows: data.output.m[0].length,\n                    cols: this.middleLayerUnits,\n                    values: MathHelpers.Gaussian.random\n                }\n            ))\n        }\n\n        /**\n         * Forward propagation.\n         * \n         * @param data MathHelpers.Matrix\n         * \n         * @return Array<Data.sum>\n         */\n        private forward(data: MathHelpers.Matrix): Array<Data.Sum> {\n\n            let result: Array<Data.Sum> = []\n\n            result.push(this.mutiply(this.w[0], data.transpose()))\n\n            for (let i = 1; i < this.middleLayer; i++) {\n                result.push(this.mutiply(this.w[i], result[i - 1].result))\n            }\n\n            result.push(this.mutiply(this.w[this.w.length - 1], result[result.length - 1].result, true))\n\n            return result\n        }\n\n        /**\n         * Backward propagation.\n         * \n         * @param data Data.Normalize \n         * @param results Array<Data.Sum>\n         * \n         * @return MathHelpers.Matrix\n         */\n        private back(data: Data.Normalize, results: Array<Data.Sum>): MathHelpers.Matrix {\n\n            let diff = MathHelpers.Matrix.subtract(data.output.transpose(), results[results.length - 1].result)\n            let delta = MathHelpers.Matrix.multiplyElements(results[results.length - 1].sum.transform(this.activation.prime), diff)\n            let changes = MathHelpers.Matrix.multiplyScalar(MathHelpers.Matrix.multiply(delta, results[this.middleLayer - 1].result.transpose()), this.learningRate)\n\n            this.w[this.w.length - 1] = MathHelpers.Matrix.add(this.w[this.w.length - 1], changes)\n\n            for (let i = 1; i < this.middleLayer; i++) {\n                delta = MathHelpers.Matrix.multiplyElements(MathHelpers.Matrix.multiply(this.w[this.w.length - i].transpose(), delta), results[results.length - (i + 1)].sum.transform(this.activation.prime))\n                changes = MathHelpers.Matrix.multiplyScalar(MathHelpers.Matrix.multiply(delta, results[results.length - (i + 1)].result.transpose()), this.learningRate)\n                this.w[this.w.length - (i + 1)] = MathHelpers.Matrix.add(this.w[this.w.length - (i + 1)], changes)\n            }\n\n            delta = MathHelpers.Matrix.multiplyElements(MathHelpers.Matrix.multiply(this.w[1].transpose(), delta), results[0].sum.transform(this.activation.prime))\n            changes = MathHelpers.Matrix.multiplyScalar(MathHelpers.Matrix.multiply(delta, data.input), this.learningRate)\n            this.w[0] = MathHelpers.Matrix.add(this.w[0], changes)\n\n            return diff\n        }\n\n        /**\n         * Predict result.\n         * \n         * @param input Array<number>\n         * \n         * @return number\n         */\n        public predict(input: Array<number>): Array<number> {\n\n            let predict = this.forward(new MathHelpers.Matrix([input]))\n\n            return predict[predict.length - 1].result.m\n        }\n\n        /**\n         * Sum.\n         * \n         * @param w MathHelpers.Matrix\n         * @param data MathHelpers.Matrix\n         * \n         * @return Data.sum\n         */\n        private mutiply(w: MathHelpers.Matrix, data: MathHelpers.Matrix, hidden?: boolean): Data.Sum {\n            let result: MathHelpers.Matrix\n            let sum: MathHelpers.Matrix\n            sum = MathHelpers.Matrix.multiply(w, data)\n            result = sum.transform(this.activation.value)\n            const response = new Data.Sum(sum, result)\n\n            return response;\n        }\n\n        /**\n         * Normalize input.\n         * \n         * @param inputData Array<any>\n         * \n         * @return Data.Normalize\n         */\n        protected format(inputData: Array<any>): Data.Normalize {\n            let input: Array<number>[] = []\n            let output: Array<number>[] = []\n\n            for (let i = 0; i < inputData.length; i++) {\n                input.push(inputData[i].input)\n                output.push(inputData[i].output)\n            }\n\n            return new Data.Normalize(new MathHelpers.Matrix(input), new MathHelpers.Matrix(output))\n        }\n\n        /**\n         * Export model.\n         * \n         * @return string\n         */\n        public export(): string {\n            return JSON.stringify(this.w)\n        }\n\n        /**\n         * Import model.\n         * \n         * @param arg string\n         */\n        public import(arg: string): void {\n            this.w = JSON.parse(arg)\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts"],"sourceRoot":""}